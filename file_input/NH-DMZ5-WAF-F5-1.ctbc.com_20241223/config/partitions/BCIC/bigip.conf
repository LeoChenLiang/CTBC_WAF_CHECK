#TMSH-VERSION: 17.1.1.3

asm policy /BCIC/SP_BCIC {
    active
    encoding utf-8
}
ltm node /BCIC/10.24.64.18 {
    address 10.24.64.18
}
ltm node /BCIC/10.24.64.19 {
    address 10.24.64.19
}
ltm policy /BCIC/asm_auto_l7_policy__VS_BCIC_443 {
    controls { asm }
    requires { http }
    rules {
        default {
            actions {
                1 {
                    asm
                    enable
                    policy /BCIC/SP_BCIC
                }
            }
            ordinal 1
        }
    }
    strategy /Common/first-match
}
ltm pool /BCIC/POOL_BCIC_443 {
    members {
        /BCIC/10.24.64.18:9003 {
            address 10.24.64.18
        }
        /BCIC/10.24.64.19:9003 {
            address 10.24.64.19
            session user-disabled
        }
    }
    monitor /Common/tcp
}
ltm rule /BCIC/iRule_Dispatch_BCIC_HTTPS {
when HTTP_REQUEST {
  set clientIP [IP::client_addr]
  set clientPort [TCP::client_port] 
  set host [HTTP::host]
  set url [string tolower [HTTP::uri]]
  set localPort [TCP::local_port]
  set headerAgent [HTTP::header User-Agent]
  if { $url starts_with "/bcic-web/"} { 
    pool POOL_BCIC_443
  } else {
    reject
    log local0. "$clientIP:$clientPort redirect to $host$url is rejected."
  }
}


when HTTP_RESPONSE {


  HTTP::header insert "X-FRAME-OPTIONS" "SAMEORIGIN"
  HTTP::header insert "Cache-control" "no-store, max-age=0"
  HTTP::header insert "Pragma" "no-cache"
  HTTP::header insert "X-XSS-Protection" "1; mode=block"
  HTTP::header insert "X-Content-Type-Options" "nosniff"
  HTTP::header insert "Referrer-Policy" "strict-origin-when-cross-origin"
  HTTP::header insert "Permissions-Policy"  "camera=(),microphone=(),geolocation=()"

  if {!([HTTP::header exists "Strict-Transport-Security"])}{
    HTTP::header insert "Strict-Transport-Security" "max-age=31536000; includeSubdomains"
  }

  if {$url starts_with "/bcic-web"} {
    HTTP::header insert "Content-Security-Policy" "frame-ancestors corporate.ctbcbank.com corpap.ctbcbank.com corporate.ctbcbank.com.cn"
  }

    set COOKIE_VAL [HTTP::header values "Set-Cookie"]
	HTTP::header remove "Set-Cookie"

	foreach COOKIE_NAME $COOKIE_VAL {
		HTTP::header insert "Set-Cookie" "${COOKIE_NAME}; SameSite=None"
	}
}
when HTTP_RESPONSE_RELEASE {

  set cookies [HTTP::cookie names]
  foreach aCookie $cookies {

    HTTP::cookie httponly $aCookie enable
	HTTP::cookie secure $aCookie enable
  }

}
}
ltm snat-translation /BCIC/10.23.91.78 {
    address 10.23.91.78
    inherited-traffic-group true
    traffic-group /Common/traffic-group-1
}
ltm snatpool /BCIC/SNAT_BCIC_Intra {
    members {
        /BCIC/10.23.91.78
    }
}
ltm virtual /BCIC/VS_BCIC_443 {
    destination /BCIC/175.184.243.7:443
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /Common/cookie_insert_inptup {
            default yes
        }
    }
    policies {
        /BCIC/asm_auto_l7_policy__VS_BCIC_443 { }
    }
    pool /BCIC/POOL_BCIC_443
    profiles {
        /BCIC/ASM_SP_BCIC { }
        /BCIC/BCIC_SSL_PRD {
            context clientside
        }
        /Common/HTTP_X_forward { }
        /Common/tcp { }
        /Common/websecurity { }
    }
    rules {
        /Common/iRule_SlowAttack_Protection
        /BCIC/iRule_Dispatch_BCIC_HTTPS
    }
    security-log-profiles {
        /Common/Arcsight_LOG_P
        /Common/Arcsight_LOG_P_local
    }
    serverssl-use-sni disabled
    source 0.0.0.0/0
    source-address-translation {
        pool /BCIC/SNAT_BCIC_Intra
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual-address /BCIC/175.184.243.7 {
    address 175.184.243.7
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm profile client-ssl /BCIC/BCIC_SSL_PRD {
    alert-timeout 10
    allow-dynamic-record-sizing disabled
    allow-non-ssl disabled
    app-service none
    cache-size 262144
    cache-timeout 3600
    cert /Common/BCIC_SSL_2024
    cert-key-chain {
        BCIC_SSL_2024_BCIC_SSL_CHINA_0 {
            cert /Common/BCIC_SSL_2024
            chain /Common/BCIC_SSL_CHINA.crt
            key /Common/BCIC_SSL_2024
        }
    }
    chain /Common/BCIC_SSL_CHINA.crt
    cipher-group none
    ciphers ECDHE-RSA-AES256-GCM-SHA384:!CHACHA20-POLY1305
    defaults-from /Common/clientssl
    generic-alert enabled
    handshake-timeout 10
    inherit-ca-certkeychain true
    inherit-certkeychain false
    key /Common/BCIC_SSL_2024
    max-active-handshakes indefinite
    max-aggregate-renegotiation-per-minute indefinite
    max-renegotiations-per-minute 5
    maximum-record-size 16384
    mod-ssl-methods disabled
    mode enabled
    notify-cert-status-to-virtual-server disabled
    ocsp-stapling disabled
    options { dont-insert-empty-fragments no-tlsv1.3 no-tlsv1.1 no-sslv3 no-tlsv1 }
    passphrase none
    peer-no-renegotiate-timeout 10
    proxy-ssl disabled
    proxy-ssl-passthrough disabled
    renegotiate-max-record-delay indefinite
    renegotiate-period indefinite
    renegotiate-size 1000mb
    renegotiation enabled
    secure-renegotiation require
    server-name none
    session-mirroring disabled
    session-ticket disabled
    session-ticket-timeout 0
    sni-default false
    sni-require false
    ssl-sign-hash any
    strict-resume disabled
    unclean-shutdown enabled
}
security bot-defense asm-profile /BCIC/ASM_SP_BCIC {
    app-service none
}
