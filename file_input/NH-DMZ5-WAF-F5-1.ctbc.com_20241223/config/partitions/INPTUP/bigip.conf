#TMSH-VERSION: 17.1.1.3

asm policy /INPTUP/SP_INPTUP {
    active
    encoding utf-8
}
ltm node /INPTUP/10.243.136.139 {
    address 10.243.136.139
}
ltm node /INPTUP/10.243.136.140 {
    address 10.243.136.140
}
ltm node /INPTUP/192.168.200.29 {
    address 192.168.200.29
}
ltm node /INPTUP/192.168.200.30 {
    address 192.168.200.30
}
ltm policy /INPTUP/asm_auto_l7_policy__VS_INPT_UP_EXT_175.184.243.53_443 {
    controls { asm }
    requires { http }
    rules {
        default {
            actions {
                1 {
                    asm
                    enable
                    policy /INPTUP/SP_INPTUP
                }
            }
            ordinal 1
        }
    }
    strategy /Common/first-match
}
ltm policy /INPTUP/asm_auto_l7_policy__VS_INPT_UP_INTRA_10.23.91.32_443 {
    controls { asm }
    requires { http }
    rules {
        default {
            actions {
                1 {
                    asm
                    enable
                    policy /INPTUP/SP_INPTUP
                }
            }
            ordinal 1
        }
    }
    strategy /Common/first-match
}
ltm pool /INPTUP/POOL_INPT_UP_AP {
    members {
        /INPTUP/10.243.136.139:2080 {
            address 10.243.136.139
        }
        /INPTUP/10.243.136.140:2080 {
            address 10.243.136.140
        }
    }
    monitor /Common/tcp
}
ltm pool /INPTUP/POOL_INPT_UP_WEB_8083 {
    members {
        /INPTUP/10.243.136.139:8083 {
            address 10.243.136.139
            monitor /Common/tcp
        }
        /INPTUP/10.243.136.140:8083 {
            address 10.243.136.140
            monitor /Common/tcp
        }
    }
    monitor /Common/tcp
}
ltm rule /INPTUP/INPT_PERSIST {
when RULE_INIT {
  set static::debug 1
}

when CLIENT_ACCEPTED {
  if { $static::debug } {
    set client [IP::client_addr]:[TCP::client_port]
  }
}

when HTTP_RESPONSE {
  if { [HTTP::cookie exists "JSESSIONID"] } {
    set jsessionid [HTTP::cookie "JSESSIONID"]
    persist add uie $jsessionid 1800
    if { $static::debug } {
      #log local0. "NEW PERSIST ENTRY client>$client< JSESSIONID>$jsessionid<"
    }
  }
}

when HTTP_REQUEST {
  set jsessionid ""
  set cookie_id ""
  set uri [HTTP::uri]
  set uri_id [findstr $uri "jsessionid=" 11 "?"]
  if { [HTTP::cookie exists "JSESSIONID"] } {
    set cookie_id [HTTP::cookie "JSESSIONID"]
  }
  if { $cookie_id ne "" } {
    set jsessionid $cookie_id
  } elseif { $uri_id ne "" } {
    set jsessionid $uri_id
  }
  if { $jsessionid ne "" } {
    persist uie $jsessionid 1800
  }
  if { $static::debug } {
    set table ""
    if { $jsessionid ne "" } {
      set table [persist lookup uie $jsessionid]
    }
    if { $table eq "" } {
      #log local0. "client>$client< uri>$uri< cookie_id>$cookie_id< uri_id>$uri_id< JSESSIONID>$jsessionid< table>null<"
    } else {
      #log local0. "client>$client< uri>$uri< cookie_id>$cookie_id< uri_id>$uri_id< JSESSIONID>$jsessionid< table>[lindex $table 0] [lindex $table 1] [lindex $table 2]<"
    }
  }
}

when LB_SELECTED {
  if { $static::debug } {
    set server [LB::server addr]:[LB::server port]
    #log local0. "client>$client< server>$server<"
  }
}

when LB_FAILED {
  if { $static::debug } {
    if { $jsessionid ne "" } {
      if { $table ne "" } {
        #log local0. "client>$client< JSESSIONID>$jsessionid< table>[lindex $table 0] [lindex $table 1] [lindex $table 2]<"
      } else {
        #log local0. "client>$client< JSESSIONID>$jsessionid< table>null<"
      }
    } else {
      #log local0. "client>$client< JSESSIONID>null< table>null<"
    }
  }
  if { $jsessionid ne "" } { persist delete uie $jsessionid }
  if { $table ne "" } { LB::reselect pool [lindex $table 0] }
}
}
ltm rule /INPTUP/iRule_Block_HTTP_TRACE {
when HTTP_REQUEST {
    if { [HTTP::method] equals "TRACE" } {
     reject
    }
}
}
ltm rule /INPTUP/iRule_HTTP_HTTPS {
when HTTP_REQUEST {
           HTTP::redirect "https://[HTTP::host][HTTP::uri]"
#         log local0. "H:[HTTP::host] U:[HTTP::uri] Q:[HTTP::query] HTTP 2 HTTPS"
}
}
ltm rule /INPTUP/iRule_INPT_Dispatch_AP {
when RULE_INIT {  
    set ::ma_down_inpt "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><style></style><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" /></head><body lang=ZH-TW style='text-justify-trim:punctuation'><p><b><u>&#37325;&#35201;&#20844;&#21578;</u></b></p><p>&#28858;&#20102;&#25552;&#20379;&#26356;&#22909;&#30340;&#26381;&#21209;&#65292;&#26412;&#34892;&#30446;&#21069;&#27491;&#22312;&#36914;&#34892;&#30828;&#39636;&#21319;&#32026;&#20316;&#26989;&#12290; </p><p&#22914;&#20316;&#26989;&#38918;&#21033;&#26371;&#25552;&#26089;&#24674;&#24489;&#26381;&#21209;&#12290;&#36896;&#25104;&#24744;&#30340;&#19981;&#20415;&#65292;&#25964;&#35531;&#35211;&#35538;!</p><p>&nbsp;</p><p>&#20013;&#22283;&#20449;&#35351; &#25964;&#21855;</p></body></html>"
    set ::ma_content_inpt "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><style></style><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" /></head><body lang=ZH-TW style='text-justify-trim:punctuation'><p><b><u>&#37325;&#35201;&#20844;&#21578;</u></b></p><p>&#28858;&#20102;&#25552;&#20379;&#26356;&#22909;&#30340;&#26381;&#21209;&#65292;&#26412;&#34892;&#30446;&#21069;&#27491;&#22312;&#36914;&#34892;&#30828;&#39636;&#21319;&#32026;&#20316;&#26989;&#12290; </p><p> &#22914;&#20316;&#26989;&#38918;&#21033;&#26371;&#25552;&#26089;&#24674;&#24489;&#26381;&#21209;&#12290;&#36896;&#25104;&#24744;&#30340;&#19981;&#20415;&#65292;&#25964;&#35531;&#35211;&#35538;!</p><p>&nbsp;</p><p>&#20013;&#22283;&#20449;&#35351; &#25964;&#21855;</p></body></html>"
}
when HTTP_REQUEST {

    set reqURI [HTTP::uri];
    #set referer [string tolower [HTTP::header value "Referer"]];

    if {[HTTP::header value "Referer"] starts_with "https://school.ctbcbank.com" }{
        HTTP::respond 307 Location "https://www.27608818.com[HTTP::uri]"
    }elseif {[HTTP::uri] starts_with "/tuipaymtUPOP/pages/unionPay/returnMessage.faces" }{
     HTTP::uri [string map {"/tuipaymtUPOP/pages/unionPay/returnMessage.faces" "/web/npgCallBackToRedirect"} [HTTP::uri]]
     HTTP::respond 307 Location "https://www.i-payment.com.tw[HTTP::uri]"
    } elseif {[HTTP::uri] starts_with "/tuipaymtUPOP/callBackService" }{
       HTTP::uri [string map {"/tuipaymtUPOP/callBackService" "/web/npgCallBackToProcess"} [HTTP::uri]]
       snat automap
       pool POOL_INPT_UP_WEB_8083
    } elseif {[HTTP::uri] starts_with "/tuipaymtUPOP/pages/unionPay/query.faces" }{
       HTTP::uri [string map {"/tuipaymtUPOP/pages/unionPay/query.faces" "/web/inputTuitionUpopPayment"} [HTTP::uri]]
       snat automap
       pool POOL_INPT_UP_WEB_8083
    } elseif {[HTTP::uri] starts_with "/web" }{
       snat automap
       pool POOL_INPT_UP_WEB_8083
    } else {
       #snat automap
       #pool POOL_INPT_UP_WEB_8083
       HTTP::redirect "https://www.i-payment.com.tw/web/freego"
       #HTTP::redirect "https://www.i-payment.com.tw/web/freego"
    }
}
when HTTP_RESPONSE {
    set module [HTTP::header value "module-name"]


    HTTP::header remove Server
    foreach header_name [HTTP::header names] {
       #X-Frame-Options
       #&#20027;&#27231;&#23553;&#21253;&#27161;&#38957;&#36039;&#35338;&#27945;&#28431;&#20027;&#27231;&#12289;&#22871;&#20214;&#29256;&#26412; X-Powered-By
       #X-&#38283;&#38957;&#30340;&#37117;&#26371;&#34987;&#31227;&#25481;
       if {[string match -nocase X-* $header_name]}{
           if { ($header_name starts_with "x-auth-token")}{
           } else {
                HTTP::header remove $header_name
           }
       }
    }
    HTTP::header insert "X-Frame-Options" "SAMEORIGIN"
    HTTP::header insert "X-Content-Type-Options" "nosniff"
    HTTP::header insert "X-Forwarded-Proto" "https"
    HTTP::header insert "X-XSS-Protection" "1; mode=block"
    HTTP::header insert "Referrer-Policy" "strict-origin-when-cross-origin"
    HTTP::header remove "permissions-policy"
    HTTP::header insert "permissions-policy" "camera=(), geolocation=(), microphone=()"
    HTTP::header insert "Content-Security-Policy"  "default-src 'self'; object-src 'none'; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google.com https://www.google-analytics.com https://ssl.google-analytics.com https://www.googleadservices.com https://googleads.g.doubleclick.net https://*.googletagmanager.com https://tagmanager.google.com; style-src 'self' 'unsafe-inline' https://tagmanager.google.com https://fonts.googleapis.com; img-src 'self' data: https://ipayment.ctbcbank.com https://www.google.com https://www.google-analytics.com https://*.googletagmanager.com https://*.google-analytics.com https://*.analytics.google.com https://*.g.doubleclick.net https://*.google.com https://*.google.com.tw https://ssl.gstatic.com https://www.gstatic.com; connect-src 'self' https://www.google-analytics.com https://*.googletagmanager.com https://*.google-analytics.com https://*.analytics.google.com https://*.g.doubleclick.net https://*.google.com https://*.google.com.tw; font-src 'self' data: https://fonts.gstatic.com; frame-src 'self' https://bid.g.doubleclick.net; media-src 'self' data:;"
    if {($reqURI starts_with "/web/freego")} {
        #HTTP::redirect "/web/freego"
        HTTP::header remove "permissions-policy"
        HTTP::header insert "permissions-policy" "camera=(), geolocation=(), microphone=(self)"
        #HTTP::header insert "Content-Security-Policy" "default-src 'self'; object-src 'none'; frame-ancestors 'self'; style-src 'self' 'unsafe-inline'; media-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: https://ipayment.ctbcbank.com;"
    }
    #else {
  #      HTTP::header insert "Content-Security-Policy" "default-src 'self'; object-src 'none'; frame-ancestors 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: https://ipayment.ctbcbank.com;"
#	}    

    HTTP::header remove "Cache-Control"
    HTTP::header insert "Cache-Control" "no-store, max-age=0"
    if { ([HTTP::header value Content-Type] contains "image/jpeg") or ([HTTP::header value Content-Type] contains "image/png") } {
       if { [HTTP::header Content-Length] > 30000 } { 
             #image ad use cache control to reduce network access
         HTTP::header remove "Cache-Control"
         HTTP::header insert "Cache-Control" "max-age=31536000"
       }
    }

           if { ([HTTP::status] == 400 ) || ([HTTP::status] == 401 ) || ([HTTP::status] == 404 )|| ([HTTP::status] == 405 ) || ([HTTP::status] == 407 ) || ([HTTP::status] == 417 ) || [HTTP::status] == 500 || ([HTTP::status] == 503 )} {
                #HTTP::redirect "/web"
                HTTP::redirect "/web/freego"

            }
}
when HTTP_RESPONSE_RELEASE {
  if { !([HTTP::header exists "Strict-Transport-Security"])} {
    HTTP::header insert "Strict-Transport-Security" "max-age=31536000; includeSubDomains"
  }
}
when LB_FAILED {
    HTTP::respond 200 content $::ma_content_inpt
}
}
ltm rule /INPTUP/iRule_INPT_REMOVE_HEADER {
when HTTP_RESPONSE {
	if { [HTTP::has_responded] } { return };
    HTTP::header remove Server

    foreach header_name [HTTP::header names] {

       #X-Frame-Options
       #&#20027;&#27231;&#23553;&#21253;&#27161;&#38957;&#36039;&#35338;&#27945;&#28431;&#20027;&#27231;&#12289;&#22871;&#20214;&#29256;&#26412; X-Powered-By
       #X-&#38283;&#38957;&#30340;&#37117;&#26371;&#34987;&#31227;&#25481;
       if {[string match -nocase X-* $header_name]}{

           HTTP::header remove $header_name
       }
    }

    HTTP::header insert "X-Frame-Options" "SAMEORIGIN"


    #&#32178;&#31449;&#30340;&#23553;&#21253;&#27161;&#38957;&#23660;&#24615;&#32570;&#23569;X-Content-Type-Options
    if {![HTTP::header exists "X-Content-Type-Options"] } { 
       HTTP::header insert "X-Content-Type-Options" "nosniff" 
    }
    if {![HTTP::header exists "X-XSS-Protection"] } { 
        HTTP::header insert "X-XSS-Protection" "1; mode=block" 
    }
    HTTP::header insert "Content-Security-Policy" "default-src * data: blob: ws: wss: gap://ready file://* 'unsafe-inline' 'unsafe-eval' ;script-src * 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com 'unsafe-inline'; connect-src * 'unsafe-inline'; img-src * data: blob: 'unsafe-inline';frame-src * data: blob:;style-src * 'unsafe-inline';frame-ancestors 'self'"
    HTTP::header insert "Referrer-Policy" "no-referrer-when-downgrade"
    HTTP::header insert "permissions-policy" "microphone=(),midi=()"
}
}
ltm rule /INPTUP/iRule_dispatch_setCookie_HTTP_HTTPS_only {
when HTTP_RESPONSE {
   if { [HTTP::has_responded] } { return };
  # HTTP::header insert "X-Frame-Options" "SAMEORIGIN"

   set allcookie [HTTP::header values "Set-Cookie"]
   HTTP::header remove "Set-Cookie"

   foreach thecookie $allcookie {
      if {$thecookie starts_with "JSESSIONID"} {
         HTTP::header insert "Set-Cookie" "${thecookie}; secure; HttpOnly"
      } else {
         HTTP::header insert "Set-Cookie" "$thecookie"
      }
   }
}
}
ltm snat-translation /INPTUP/10.23.91.32 {
    address 10.23.91.32
    inherited-traffic-group true
    traffic-group /Common/traffic-group-1
}
ltm snatpool /INPTUP/SNAT_INPT_UP {
    members {
        /INPTUP/10.23.91.32
    }
}
ltm virtual /INPTUP/VS_INPT_UP_EXT_175.184.243.53_443 {
    destination /INPTUP/175.184.243.53:443
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /INPTUP/cookie_insert_inptup_secure {
            default yes
        }
    }
    policies {
        /INPTUP/asm_auto_l7_policy__VS_INPT_UP_EXT_175.184.243.53_443 { }
    }
    pool /INPTUP/POOL_INPT_UP_WEB_8083
    profiles {
        /Common/HTTP_X_forward { }
        /Common/tcp { }
        /Common/websecurity { }
        /INPTUP/ASM_SP_INPTUP { }
        /INPTUP/INPT_SSL_PROFILE {
            context clientside
        }
    }
    rules {
        /INPTUP/iRule_Block_HTTP_TRACE
        /INPTUP/iRule_INPT_Dispatch_AP
        /INPTUP/iRule_dispatch_setCookie_HTTP_HTTPS_only
    }
    security-log-profiles {
        /Common/Arcsight_LOG_P
        /Common/Arcsight_LOG_P_local
    }
    serverssl-use-sni disabled
    source 0.0.0.0/0
    translate-address enabled
    translate-port enabled
}
ltm virtual /INPTUP/VS_INPT_UP_INTRA_10.23.91.32_443 {
    destination /INPTUP/10.23.91.32:443
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /INPTUP/cookie_insert_inptup_secure {
            default yes
        }
    }
    policies {
        /INPTUP/asm_auto_l7_policy__VS_INPT_UP_INTRA_10.23.91.32_443 { }
    }
    pool /INPTUP/POOL_INPT_UP_WEB_8083
    profiles {
        /Common/HTTP_X_forward { }
        /Common/tcp { }
        /Common/websecurity { }
        /INPTUP/ASM_SP_INPTUP { }
        /INPTUP/INPT_SSL_PROFILE {
            context clientside
        }
    }
    rules {
        /INPTUP/iRule_Block_HTTP_TRACE
        /INPTUP/iRule_INPT_Dispatch_AP
        /INPTUP/iRule_dispatch_setCookie_HTTP_HTTPS_only
    }
    security-log-profiles {
        /Common/Arcsight_LOG_P
        /Common/Arcsight_LOG_P_local
    }
    serverssl-use-sni disabled
    source 0.0.0.0/0
    source-address-translation {
        pool /INPTUP/SNAT_INPT_UP
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual-address /INPTUP/10.23.91.32 {
    address 10.23.91.32
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /INPTUP/175.184.243.53 {
    address 175.184.243.53
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm persistence cookie /INPTUP/cookie_insert_inptup_secure {
    app-service none
    cookie-encryption required
    defaults-from /Common/cookie_insert_inptup
    encrypt-cookie-poolname enabled
}
ltm persistence universal /INPTUP/INPT_PERSIS_2 {
    app-service none
    defaults-from /Common/universal
    rule /INPTUP/INPT_PERSIST
}
ltm profile client-ssl /INPTUP/INPT_SSL_PROFILE {
    app-service none
    cert /Common/INPT_UP_SSL_2025
    cert-key-chain {
        INPT_UP_SSL_2025_INPT_UP_SSL_2025_UCA_0 {
            cert /Common/INPT_UP_SSL_2025
            chain /Common/INPT_UP_SSL_2025_UCA
            key /Common/INPT_UP_SSL_2025
        }
    }
    chain /Common/INPT_UP_SSL_2025_UCA
    cipher-group none
    ciphers ECDHE:!LOW:!EXP:!NULL:!RC4:!NONE:!DES:!3DES:!SHA:!MD5+HIGH:+MEDIUM:!CAMELLIA:!DHE:!CHACHA20-POLY1305
    defaults-from /Common/INPT_SSL_P
    inherit-ca-certkeychain true
    inherit-certkeychain false
    key /Common/INPT_UP_SSL_2025
    options { dont-insert-empty-fragments no-tlsv1.3 no-tlsv1.1 no-sslv3 no-tlsv1 }
    passphrase none
}
ltm profile http-compression /INPTUP/http_INPT_UP {
    app-service none
    content-type-exclude none
    content-type-include { text/ "application/(xml|x-javascript)" application/javascript image/gif image/jpeg image/png }
    defaults-from /Common/httpcompression
    method-prefer gzip
    min-size 200
}
security bot-defense asm-profile /INPTUP/ASM_SP_INPTUP {
    app-service none
}
sys file ssl-cert /INPTUP/INPT_UP_SSL_2020.crt {
    cache-path /config/filestore/files_d/INPTUP_d/certificate_d/:INPTUP:INPT_UP_SSL_2020.crt_77938_1
    revision 1
}
sys file ssl-cert /INPTUP/INPT_UP_SSL_2020_ROOT.crt {
    cache-path /config/filestore/files_d/INPTUP_d/certificate_d/:INPTUP:INPT_UP_SSL_2020_ROOT.crt_77945_1
    revision 1
}
sys file ssl-cert /INPTUP/INPT_UP_SSL_2020_UAC_1.crt {
    cache-path /config/filestore/files_d/INPTUP_d/certificate_d/:INPTUP:INPT_UP_SSL_2020_UAC_1.crt_77952_1
    revision 1
}
sys file ssl-cert /INPTUP/INPT_UP_SSL_2020_UAC_2.crt {
    cache-path /config/filestore/files_d/INPTUP_d/certificate_d/:INPTUP:INPT_UP_SSL_2020_UAC_2.crt_77959_1
    revision 1
}
sys file ssl-key /INPTUP/INPT_UP_SSL_2020.key {
    cache-path /config/filestore/files_d/INPTUP_d/certificate_key_d/:INPTUP:INPT_UP_SSL_2020.key_77966_1
    revision 1
}
