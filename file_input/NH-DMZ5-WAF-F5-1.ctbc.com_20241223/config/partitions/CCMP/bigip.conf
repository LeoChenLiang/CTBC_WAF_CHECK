#TMSH-VERSION: 17.1.1.3

asm policy /CCMP/SP_CCMP {
    active
    encoding utf-8
}
asm policy /CCMP/SP_CCMP_WebSocket {
    active
    encoding utf-8
}
ltm node /CCMP/10.24.69.171 {
    address 10.24.69.171
}
ltm node /CCMP/10.24.69.172 {
    address 10.24.69.172
}
ltm policy /CCMP/asm_auto_l7_policy__VS-CCMP_Websocket {
    controls { asm }
    requires { http }
    rules {
        default {
            actions {
                1 {
                    asm
                    enable
                    policy /CCMP/SP_CCMP_WebSocket
                }
            }
            ordinal 1
        }
    }
    strategy /Common/first-match
}
ltm policy /CCMP/asm_auto_l7_policy__VS_CCMP_443 {
    controls { asm }
    requires { http }
    rules {
        default {
            actions {
                1 {
                    asm
                    enable
                    policy /CCMP/SP_CCMP
                }
            }
            ordinal 1
        }
    }
    strategy /Common/first-match
}
ltm pool /CCMP/POOL_CCMP_9003 {
    members {
        /CCMP/10.24.69.171:9003 {
            address 10.24.69.171
        }
        /CCMP/10.24.69.172:9003 {
            address 10.24.69.172
        }
    }
    monitor /Common/tcp
}
ltm rule /CCMP/iRule_Dispatch_CCMP_HTTPS {
when HTTP_REQUEST {
  set url [string tolower [HTTP::uri]]

   if { $url starts_with "/ccmp-console"}
	{
	     reject;
	}

    #if { $url starts_with "/ccmp-gw/ccmpgw"}
	#{

	 #    pool POOL_CCMP_9003
	#}
	 #if { $url starts_with "/flexible-layout"}
	#{

	#     pool POOL_CCMP_9003
	##}
	#else
	#{
	 #   reject
	#}
}

#when HTTP_REQUEST priority 100 {



#}

#priority 500
when HTTP_RESPONSE  {
if { [HTTP::header exists "Set-Cookie"] } {



            HTTP::header replace Set-Cookie [string map -nocase "HttpOnly Secure;HttpOnly;SameSite=None" [HTTP::header Set-Cookie]]
}
    HTTP::header insert Access-Control-Allow-Origin "*"
    HTTP::header insert "X-Content-Type-Options" "nosniff"
    HTTP::header insert "X-XSS-Protection" "1; mode=block"
    #HTTP::header insert "Referrer-Policy" "no-referrer-when-downgrade"
    HTTP::header insert "Strict-Transport-Security"  "max-age=31536000; includeSubDomains"
    #HTTP::header insert "Feature-Policy" "camera 'none'"
    #HTTP::header insert "Content-Security-Policy" "script-src 'self' 'unsafe-inline'"
    HTTP::header insert "X-Frame-Options" "SAMEORIGIN"

    #HTTP::header insert "Permissions-Policy" "microphone=()"
    #HTTP::header insert "Content-Security-Policy" "frame-ancestors corporate.ctbcbank.com corporate.chinatrust.com;"


    HTTP::header insert "Content-Security-Policy" "default-src 'self' 'unsafe-inline' corporate.ctbcbank.com corporate.chinatrust.com; frame-ancestors 'self' corporate.ctbcbank.com corporate.chinatrust.com;"
    HTTP::header insert "Referrer-Policy" "strict-origin-when-cross-origin"
    HTTP::header insert "Permission-Policy" "geolocation=(),microphone=(),camera=()"
    HTTP::header insert "Cache-Control" "no-store,max-age=0"


}
}
ltm rule /CCMP/iRule_Dispatch_CCMP_Websocket {
when HTTP_REQUEST priority 100 {

}

when HTTP_RESPONSE {
    if { [string tolower [HTTP::header Upgrade]] contains "websocket" }{
        if { [HTTP::header exists "Transfer-Encoding"] }{
                HTTP::header remove "Transfer-Encoding"
            }
    }

    HTTP::header insert Access-Control-Allow-Origin "*"
    HTTP::header insert "X-Content-Type-Options" "nosniff"
    HTTP::header insert "X-XSS-Protection" "1; mode=block"
    HTTP::header insert "Referrer-Policy" "no-referrer-when-downgrade"
    HTTP::header insert "Strict-Transport-Security"  "max-age=31536000; includeSubDomains"
    HTTP::header insert "Feature-Policy" "camera 'none'"
    #HTTP::header insert "Content-Security-Policy" "script-src 'self' 'unsafe-inline'"
    HTTP::header insert "X-Frame-Options" "SAMEORIGIN"

    HTTP::header insert "Permissions-Policy" "microphone=()"
    HTTP::header insert "Content-Security-Policy" "frame-ancestors corporate.ctbcbank.com corporate.chinatrust.com;"



}
}
ltm snat-translation /CCMP/10.23.91.47 {
    address 10.23.91.47
    inherited-traffic-group true
    traffic-group /Common/traffic-group-1
}
ltm snatpool /CCMP/SNAT_CCMP_AP {
    members {
        /CCMP/10.23.91.47
    }
}
ltm virtual /CCMP/VS-CCMP_Websocket {
    destination /CCMP/175.184.243.17:7443
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /CCMP/CCMP_cookie {
            default yes
        }
    }
    policies {
        /CCMP/asm_auto_l7_policy__VS-CCMP_Websocket { }
    }
    pool /CCMP/POOL_CCMP_9003
    profiles {
        /CCMP/ASM_SP_CCMP_WebSocket { }
        /CCMP/CCMPWebsocket { }
        /CCMP/CCMP_SSL_P {
            context clientside
        }
        /Common/HTTP_X_forward { }
        /Common/mptcp-mobile-optimized { }
        /Common/websecurity { }
    }
    rules {
        /Common/iRule_SlowAttack_Protection
        /CCMP/iRule_Dispatch_CCMP_Websocket
    }
    security-log-profiles {
        /Common/Arcsight_LOG_P
        /Common/Arcsight_LOG_P_local
    }
    serverssl-use-sni disabled
    source 0.0.0.0/0
    source-address-translation {
        pool /CCMP/SNAT_CCMP_AP
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /CCMP/VS_CCMP_443 {
    destination /CCMP/175.184.243.17:443
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /CCMP/CCMP_cookie {
            default yes
        }
    }
    policies {
        /CCMP/asm_auto_l7_policy__VS_CCMP_443 { }
    }
    pool /CCMP/POOL_CCMP_9003
    profiles {
        /CCMP/ASM_SP_CCMP { }
        /CCMP/CCMP_SSL_P {
            context clientside
        }
        /Common/DDOS-profile_20170428 { }
        /Common/HTTP_X_forward { }
        /Common/mptcp-mobile-optimized { }
        /Common/websecurity { }
    }
    rules {
        /Common/iRule_SlowAttack_Protection
        /CCMP/iRule_Dispatch_CCMP_HTTPS
    }
    security-log-profiles {
        /Common/Arcsight_LOG_P
        /Common/Arcsight_LOG_P_local
    }
    serverssl-use-sni disabled
    source 0.0.0.0/0
    source-address-translation {
        pool /CCMP/SNAT_CCMP_AP
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual-address /CCMP/175.184.243.17 {
    address 175.184.243.17
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm persistence cookie /CCMP/CCMP_cookie {
    always-send disabled
    app-service none
    cookie-encryption required
    cookie-encryption-passphrase $M$Bp$2CVCRkKy6gYB4SZi/HYd9A==
    cookie-name none
    defaults-from /Common/cookie
    encrypt-cookie-poolname disabled
    expiration 0
    httponly enabled
    method insert
    override-connection-limit disabled
    secure enabled
}
ltm profile client-ssl /CCMP/CCMP_SSL_P {
    alert-timeout 10
    allow-non-ssl disabled
    app-service none
    cache-size 262144
    cache-timeout 3600
    cert /Common/CCMP_bizbank_SSL_2024
    cert-key-chain {
        CCMP_bizbank_SSL_2024_CCMP_TWCA_Chain_0 {
            cert /Common/CCMP_bizbank_SSL_2024
            chain /Common/CCMP_TWCA_Chain.crt
            key /Common/CCMP_bizbank_SSL_2024
        }
    }
    chain /Common/CCMP_TWCA_Chain.crt
    cipher-group none
    ciphers ECDHE-RSA-AES256-GCM-SHA384:!CHACHA20-POLY1305
    defaults-from /Common/clientssl
    generic-alert enabled
    handshake-timeout 10
    inherit-ca-certkeychain true
    inherit-certkeychain false
    key /Common/CCMP_bizbank_SSL_2024
    mod-ssl-methods disabled
    mode enabled
    options { dont-insert-empty-fragments no-tlsv1.3 no-tlsv1.1 no-sslv3 no-tlsv1 }
    passphrase none
    proxy-ssl disabled
    renegotiate-max-record-delay indefinite
    renegotiate-period indefinite
    renegotiate-size 1000mb
    renegotiation enabled
    secure-renegotiation require
    server-name none
    session-ticket disabled
    sni-default false
    sni-require false
    ssl-sign-hash any
    strict-resume disabled
    unclean-shutdown enabled
}
ltm profile websocket /CCMP/CCMPWebsocket {
    app-service none
    defaults-from /Common/websocket
    masking unmask
}
security bot-defense asm-profile /CCMP/ASM_SP_CCMP {
    app-service none
}
security bot-defense asm-profile /CCMP/ASM_SP_CCMP_WebSocket {
    app-service none
}
