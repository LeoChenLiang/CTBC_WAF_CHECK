#TMSH-VERSION: 17.1.1.3

asm policy /RMAS/SP_RMAS {
    active
    encoding utf-8
}
ltm node /RMAS/10.24.71.193 {
    address 10.24.71.193
}
ltm node /RMAS/10.24.71.194 {
    address 10.24.71.194
}
ltm node /RMAS/10.248.30.111 {
    address 10.248.30.111
}
ltm node /RMAS/10.248.30.112 {
    address 10.248.30.112
}
ltm policy /RMAS/asm_auto_l7_policy__VS_RMAS_443 {
    controls { asm }
    requires { http }
    rules {
        default {
            actions {
                1 {
                    asm
                    enable
                    policy /RMAS/SP_RMAS
                }
            }
            ordinal 1
        }
    }
    strategy /Common/first-match
}
ltm policy /RMAS/asm_auto_l7_policy__VS_RMAS_intra_80 {
    controls { asm }
    requires { http }
    rules {
        default {
            actions {
                1 {
                    asm
                    enable
                    policy /RMAS/SP_RMAS
                }
            }
            ordinal 1
        }
    }
    strategy /Common/first-match
}
ltm pool /RMAS/POOL_RMAS_80 {
    members {
        /RMAS/10.248.30.111:80 {
            address 10.248.30.111
        }
        /RMAS/10.248.30.112:80 {
            address 10.248.30.112
        }
    }
    monitor /Common/http
}
ltm rule /RMAS/iRule_RMAS_PERSIST {
when RULE_INIT {
  set static::debug 1
}

when CLIENT_ACCEPTED {
  if { $static::debug } {
    set client [IP::client_addr]:[TCP::client_port]
  }
}

when HTTP_RESPONSE {
  if { [HTTP::cookie exists "JSESSIONID"] } {
    set jsessionid [HTTP::cookie "JSESSIONID"]
    persist add uie $jsessionid 1800
    if { $static::debug } {
      #log local0. "NEW PERSIST ENTRY client>$client< JSESSIONID>$jsessionid<"
    }
  }
}

when HTTP_REQUEST {
  set jsessionid ""
  set cookie_id ""
  set uri [HTTP::uri]
  set uri_id [findstr $uri "jsessionid=" 11 "?"]
  if { [HTTP::cookie exists "JSESSIONID"] } {
    set cookie_id [HTTP::cookie "JSESSIONID"]
  }
  if { $cookie_id ne "" } {
    set jsessionid $cookie_id
  } elseif { $uri_id ne "" } {
    set jsessionid $uri_id
  }
  if { $jsessionid ne "" } {
    persist uie $jsessionid 1800
  }
  if { $static::debug } {
    set table ""
    if { $jsessionid ne "" } {
      set table [persist lookup uie $jsessionid]
    }
    if { $table eq "" } {
      #log local0. "client>$client< uri>$uri< cookie_id>$cookie_id< uri_id>$uri_id< JSESSIONID>$jsessionid< table>null<"
    } else {
      #log local0. "client>$client< uri>$uri< cookie_id>$cookie_id< uri_id>$uri_id< JSESSIONID>$jsessionid< table>[lindex $table 0] [lindex $table 1] [lindex $table 2]<"
    }
  }
}

when LB_SELECTED {
  if { $static::debug } {
    set server [LB::server addr]:[LB::server port]
    #log local0. "client>$client< server>$server<"
  }
}

when LB_FAILED {
  if { $static::debug } {
    if { $jsessionid ne "" } {
      if { $table ne "" } {
        #log local0. "client>$client< JSESSIONID>$jsessionid< table>[lindex $table 0] [lindex $table 1] [lindex $table 2]<"
      } else {
        #log local0. "client>$client< JSESSIONID>$jsessionid< table>null<"
      }
    } else {
      #log local0. "client>$client< JSESSIONID>null< table>null<"
    }
  }
  if { $jsessionid ne "" } { persist delete uie $jsessionid }
  if { $table ne "" } { LB::reselect pool [lindex $table 0] }
}
}
ltm rule /RMAS/iRule_RMAS_PERSIST_2 {
when RULE_INIT {
  set static::debug 1
}

when CLIENT_ACCEPTED {
  if { $static::debug } {
    set client [IP::client_addr]:[TCP::client_port]
  }
}

when HTTP_RESPONSE {
  if { [HTTP::cookie exists "JSESSIONID"] } {
    set jsessionid [HTTP::cookie "JSESSIONID"]
    persist add uie $jsessionid 1800
    if { $static::debug } {
      #log local0. "NEW PERSIST ENTRY client>$client< JSESSIONID>$jsessionid<"
    }
  }
}

when HTTP_REQUEST {
  set jsessionid ""
  set cookie_id ""
  set uri [HTTP::uri]
  set uri_id [findstr $uri "jsessionid=" 11 "?"]
  if { [HTTP::cookie exists "JSESSIONID"] } {
    set cookie_id [HTTP::cookie "JSESSIONID"]
  }
  if { $cookie_id ne "" } {
    set jsessionid $cookie_id
  } elseif { $uri_id ne "" } {
    set jsessionid $uri_id
  }
  if { $jsessionid ne "" } {
    persist uie $jsessionid 1800
  }
  if { $static::debug } {
    set table ""
    if { $jsessionid ne "" } {
      set table [persist lookup uie $jsessionid]
    }
    if { $table eq "" } {
      #log local0. "client>$client< uri>$uri< cookie_id>$cookie_id< uri_id>$uri_id< JSESSIONID>$jsessionid< table>null<"
    } else {
      #log local0. "client>$client< uri>$uri< cookie_id>$cookie_id< uri_id>$uri_id< JSESSIONID>$jsessionid< table>[lindex $table 0] [lindex $table 1] [lindex $table 2]<"
    }
  }
}

when LB_SELECTED {
  if { $static::debug } {
    set server [LB::server addr]:[LB::server port]
    #log local0. "client>$client< server>$server<"
  }
}

when LB_FAILED {
  if { $static::debug } {
    if { $jsessionid ne "" } {
      if { $table ne "" } {
        #log local0. "client>$client< JSESSIONID>$jsessionid< table>[lindex $table 0] [lindex $table 1] [lindex $table 2]<"
      } else {
        #log local0. "client>$client< JSESSIONID>$jsessionid< table>null<"
      }
    } else {
      #log local0. "client>$client< JSESSIONID>null< table>null<"
    }
  }
  if { $jsessionid ne "" } { persist delete uie $jsessionid }
  if { $table ne "" } { LB::reselect pool [lindex $table 0] }
}
}
ltm rule /RMAS/iRule_RMAS_REMOVE_HEADER {
when HTTP_RESPONSE {
    HTTP::header remove Server
    foreach header_name [HTTP::header names] {

       if {[string match -nocase Cache-* $header_name]}{ 
           HTTP::header remove $header_name
       }
       if {[string match -nocase Pragma* $header_name]}{ 
           HTTP::header remove $header_name
       }
       if {[string match -nocase Expires* $header_name]}{ 
           HTTP::header remove $header_name
       }
    }
    HTTP::header insert "Cache-Control" "post-check=0, pre-check=0"
    HTTP::header insert "Pragma" "no-cache"
    HTTP::header insert "Expires" "0"
    #HTTP::header insert "X-XSS-Protection" "1; mode:block"

    #202307111
    HTTP::header insert "Strict-Transport-Security" "max-age=31536000; includeSubDomains"
    HTTP::header insert "X-Frame-Options" "SAMEORIGIN"
    HTTP::header insert "X-Content-Type-Options" "nosniff"
    #not work by ctbc policy1ac
    HTTP::header insert "Content-Security-Policy" "default-src 'self' 'unsafe-inline' 'unsafe-eval'; object-src 'none'; frame-ancestors 'self'; img-src 'self' data: blob"
    # HTTP::header insert "Content-Security-Policy" "default-src * 'unsafe-inline' 'unsafe-eval'; script-src * 'unsafe-inline' 'unsafe-eval'; connect-src * 'unsafe-inline'; img-src * data: blob: 'unsafe-inline'; frame-src *; style-src * 'unsafe-inline'"
    HTTP::header insert "Referrer-Policy" "strict-origin-when-cross-origin"
    HTTP::header insert "Permissions-Policy" "camera=(), microphone=(), geolocation=()"
    HTTP::header insert "Cache-Control" "no-cache, no-store, must-revalidate"

}
}
ltm rule /RMAS/iRule_RMAS_Remove_Range_Request {
when HTTP_REQUEST {
    # remove Range requests for CVE-2011-3192
    HTTP::header remove Range
    HTTP::header remove Request-Range
    if { [HTTP::version] eq "1.0"} {
        if { not ( [HTTP::header exists Host] ) or ( [HTTP::header Host] eq "") } {
            HTTP::header replace Host "card.ctbcbank.com"
        }
    }
}
}
ltm snat-translation /RMAS/10.23.91.52 {
    address 10.23.91.52
    inherited-traffic-group true
    traffic-group /Common/traffic-group-1
}
ltm snatpool /RMAS/SNAT_RMAS {
    members {
        /RMAS/10.23.91.52
    }
}
ltm virtual /RMAS/VS_RMAS_443 {
    destination /RMAS/175.184.243.22:443
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /RMAS/RMAS_PERSIST {
            default yes
        }
    }
    policies {
        /RMAS/asm_auto_l7_policy__VS_RMAS_443 { }
    }
    pool /RMAS/POOL_RMAS_80
    profiles {
        /Common/HTTP_X_forward { }
        /Common/tcp { }
        /Common/websecurity { }
        /RMAS/ASM_SP_RMAS { }
        /RMAS/RMASM_SSL_P {
            context clientside
        }
    }
    rules {
        /RMAS/iRule_RMAS_PERSIST_2
        /RMAS/iRule_RMAS_Remove_Range_Request
        /RMAS/iRule_RMAS_REMOVE_HEADER
    }
    security-log-profiles {
        /Common/Arcsight_LOG_P
        /Common/Arcsight_LOG_P_local
    }
    serverssl-use-sni disabled
    source 0.0.0.0/0
    source-address-translation {
        pool /RMAS/SNAT_RMAS
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual /RMAS/VS_RMAS_intra_80 {
    destination /RMAS/10.23.91.52:80
    ip-protocol tcp
    mask 255.255.255.255
    persist {
        /Common/source_addr {
            default yes
        }
    }
    policies {
        /RMAS/asm_auto_l7_policy__VS_RMAS_intra_80 { }
    }
    pool /RMAS/POOL_RMAS_80
    profiles {
        /Common/HTTP_X_forward { }
        /Common/tcp { }
        /Common/websecurity { }
        /RMAS/ASM_SP_RMAS { }
    }
    security-log-profiles {
        /Common/Arcsight_LOG_P
        /Common/Arcsight_LOG_P_local
    }
    serverssl-use-sni disabled
    source 0.0.0.0/0
    source-address-translation {
        pool /RMAS/SNAT_RMAS
        type snat
    }
    translate-address enabled
    translate-port enabled
}
ltm virtual-address /RMAS/10.23.91.52 {
    address 10.23.91.52
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm virtual-address /RMAS/175.184.243.22 {
    address 175.184.243.22
    arp enabled
    icmp-echo enabled
    mask 255.255.255.255
    traffic-group /Common/traffic-group-1
}
ltm persistence universal /RMAS/RMAS_PERSIST {
    app-service none
    defaults-from /Common/universal
    rule /RMAS/iRule_RMAS_PERSIST
    timeout 1800
}
ltm profile client-ssl /RMAS/RMASM_SSL_P {
    alert-timeout indefinite
    allow-non-ssl disabled
    app-service none
    cache-size 262144
    cache-timeout 3600
    cert /RMAS/RMAS_SSL_KEY_2024_P
    cert-key-chain {
        RMAS_SSL_KEY_2024_P_RMAS_TWCA_CHAIN_2024_0 {
            cert /RMAS/RMAS_SSL_KEY_2024_P
            chain /RMAS/RMAS_TWCA_CHAIN_2024
            key /RMAS/RMAS_SSL_KEY_2024_P
        }
    }
    chain /RMAS/RMAS_TWCA_CHAIN_2024
    cipher-group none
    ciphers ECDHE:!ECDHE-RSA-AES256-SHA384:!ADH:!LOW:!EXP:!NULL:!RC4:!NONE:!DES:!3DES:!SHA:!SHA256:!MD5+HIGH+MEDIUM
    defaults-from /Common/clientssl
    generic-alert enabled
    handshake-timeout 10
    inherit-ca-certkeychain true
    inherit-certkeychain false
    key /RMAS/RMAS_SSL_KEY_2024_P
    mod-ssl-methods disabled
    mode enabled
    options { dont-insert-empty-fragments no-tlsv1.3 no-tlsv1.1 no-sslv3 no-tlsv1 }
    passphrase none
    proxy-ssl disabled
    renegotiate-max-record-delay indefinite
    renegotiate-period indefinite
    renegotiate-size indefinite
    renegotiation enabled
    secure-renegotiation require
    server-name none
    session-ticket disabled
    sni-default false
    sni-require false
    ssl-sign-hash any
    strict-resume disabled
    unclean-shutdown enabled
}
ltm profile client-ssl /RMAS/RMAS_RECEIVER_SSL_P {
    app-service none
    cert /Common/default.crt
    cert-key-chain {
        default {
            cert /Common/default.crt
            key /Common/default.key
        }
    }
    chain none
    cipher-group none
    ciphers DEFAULT:!CHACHA20-POLY1305
    defaults-from /Common/clientssl
    inherit-ca-certkeychain true
    inherit-certkeychain true
    key /Common/default.key
    passphrase none
}
security bot-defense asm-profile /RMAS/ASM_SP_RMAS {
    app-service none
}
sys file ssl-cert /RMAS/RMAS_RECEIVER_TWCA_CHAIN.crt {
    cache-path /config/filestore/files_d/RMAS_d/certificate_d/:RMAS:RMAS_RECEIVER_TWCA_CHAIN.crt_117811_1
    revision 1
}
sys file ssl-cert /RMAS/RMAS_SSL_KEY_2020_P.crt {
    cache-path /config/filestore/files_d/RMAS_d/certificate_d/:RMAS:RMAS_SSL_KEY_2020_P.crt_83875_1
    revision 1
}
sys file ssl-cert /RMAS/RMAS_SSL_KEY_2021_P.crt {
    cache-path /config/filestore/files_d/RMAS_d/certificate_d/:RMAS:RMAS_SSL_KEY_2021_P.crt_92085_1
    revision 1
}
sys file ssl-cert /RMAS/RMAS_SSL_KEY_2022_P.crt {
    cache-path /config/filestore/files_d/RMAS_d/certificate_d/:RMAS:RMAS_SSL_KEY_2022_P.crt_175590_1
    revision 1
}
sys file ssl-cert /RMAS/RMAS_SSL_KEY_2023_P {
    cache-path /config/filestore/files_d/RMAS_d/certificate_d/:RMAS:RMAS_SSL_KEY_2023_P_107515_2
    revision 2
}
sys file ssl-cert /RMAS/RMAS_SSL_KEY_2024_P {
    cache-path /config/filestore/files_d/RMAS_d/certificate_d/:RMAS:RMAS_SSL_KEY_2024_P_139755_1
    revision 1
}
sys file ssl-cert /RMAS/RMAS_TWCA_CHAIN_2024 {
    cache-path /config/filestore/files_d/RMAS_d/certificate_d/:RMAS:RMAS_TWCA_CHAIN_2024_140056_1
    revision 1
}
sys file ssl-key /RMAS/RMAS_SSL_KEY_2020_P.key {
    cache-path /config/filestore/files_d/RMAS_d/certificate_key_d/:RMAS:RMAS_SSL_KEY_2020_P.key_83871_1
    revision 1
}
sys file ssl-key /RMAS/RMAS_SSL_KEY_2021_P.key {
    cache-path /config/filestore/files_d/RMAS_d/certificate_key_d/:RMAS:RMAS_SSL_KEY_2021_P.key_92081_1
    revision 1
}
sys file ssl-key /RMAS/RMAS_SSL_KEY_2022_P.key {
    cache-path /config/filestore/files_d/RMAS_d/certificate_key_d/:RMAS:RMAS_SSL_KEY_2022_P.key_175586_1
    revision 1
}
sys file ssl-key /RMAS/RMAS_SSL_KEY_2023_P {
    cache-path /config/filestore/files_d/RMAS_d/certificate_key_d/:RMAS:RMAS_SSL_KEY_2023_P_107511_1
    revision 1
}
sys file ssl-key /RMAS/RMAS_SSL_KEY_2024_P {
    cache-path /config/filestore/files_d/RMAS_d/certificate_key_d/:RMAS:RMAS_SSL_KEY_2024_P_139751_1
    revision 1
}
